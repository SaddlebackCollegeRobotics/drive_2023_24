# Launch ROS package
ros2 launch odrive_can rover_drive_launch.yaml

# Set to CLOSED_LOOP_CONTROL
ros2 service call /odrive_axis0/request_axis_state odrive_can/srv/AxisState "{axis_requested_state: 8}"

# Set to IDLE
ros2 service call /odrive_axis0/request_axis_state odrive_can/srv/AxisState "{axis_requested_state: 1}"

# Start up can0 ifconfig interface
sudo ip link set can0 up type can bitrate 1000000

# Watchdog timer is fed via publishing to the control_message topic.

# Linux systemd service for drive system
# rover-drive.service - runs on rover
# service resides in /etc/systemd/system/
# To copy a new service file:
sudo cp rover-drive.service /etc/systemd/system/

# Start, stop, status, run on startup, of service:
# Enable and disable is for allowing the service to start on device boot.
sudo systemctl [start|stop|status|enable|disable] rover-drive.service

# Extremely jank docker image commands, find more info here:
# https://github.com/dusty-nv/jetson-containers/blob/master/docs/run.md
cd /home/orin/jetson-containers
./run.sh --volume /home/orin/workspaces/drive_2023_24:/drive_2023_24  $(./autotag ros)
# Then, the drive code may be found in the container at /drive_2023_24, where it may be run as normal
